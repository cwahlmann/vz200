UP -> 1011 -> DOWN -> 1051-1067 ==> s
UP -> 2012 -> DOWN -> 2070-2244 ==> l

0  00 00
s  ss sl sl sl sl sl sl sl
|  1  0  0  0  0  0  0  0    0x80
  
This Issues Feature - The VZ Tape Format

Prior to 1985 the VZ floppy drive was not available in Australia and all File I/O was via the cassette tape interface. This article will discuss how the VZ saves data to tape.

VZ Rom routines

The VZ Rom has a tape save routine located at address 34A9h. The routine is coded to save Basic programs, however with a small change to the way the routine is called it is easy to save machine code programs or custom data files. (See note 1) 

Data written to tape is saved in the following order:

Synch bytes
Preamble
Filetype
Filename
Start Address
End Address
Program bytes
Checksum
Trailer
Synch bytes

The synch bytes are written as 255 bytes of 80h. (10000000b) The synch bytes signal the start bit of the tape data stream, and help to buffer the signal noise which occurs at the start of each recording.

Preamble

5 bytes of FEh are written to tape following the synch bytes. During loading, The preamble bytes confirm the tape is synched correctly, and the tape being read is VZ format.

Filetype

Programs are saved with a default filetype of F0h. The VZ rom uses F0h to identify Basic programs. The filetype also tells the interpreter what to do on completion of loading - return control to the user for basic programs, or auto execute for m/c programs (F1h)

Filename

The filename is written next - up to 17 bytes, terminated by 00h. The filename is taken from a buffer at address 7A9Dh

Start Address

The start address is read from the values at address 78A4/5. For basic programs the start address is normally 7AE9h

End address

The end address is read from the values at address 78F9/A. 

Program bytes

all bytes between the start and end address inclusive are written as the main data block.

Checksum

During the save operation each program byte is added to a 16 bit checksum at address 7823/4h. This is compared with the checksum generated in verify & load operations to check the program was reloaded correctly.

Trailer

A final 20 bytes of 00h is written after the checksum. This is again used to buffer the sharp noise caused by the loss of signal, which could potentially corrupt the checksum.
Note 1: saving other program types

The start of the save listing is shown below. 
34A9: DI
34AA: LD C,F0h
34AC: CALL 3558h

The first 3 instructions disable interrupts to allow for perfect timing, load the C register with the filetype (F0h for basic program), and call the routine at address 3558h which writes the synch bytes, preamble, filetype, and filename. To save a machine code program, or any custom data file:

1. Load the start and end address into 78A4/5 & 78F9/A
2. Move the filename (null terminated) into the buffer at 7A9D
3. Disable interrupts
4. Load the C register with your filetype
5. Call 34AC


Loading Programs

To load a program, the VZ does the following:

1. Scans the tape stream for the first synch byte of 80h
2. Waits for first preamble byte
3. Reads 4 more preamble bytes, (if these aren't found a loading error is generated)
4. Reads filetype
5. Reads filename
6. Reads Start Address
7. Reads End Address
8. Reads Each program byte into memory, and adds byte to checksum
9. Reads Checksum
10. Compares tape checksum to generated checksum, generates a loading error if not equal
11. Checks filetype, if F1 jumps to m/c start address 

